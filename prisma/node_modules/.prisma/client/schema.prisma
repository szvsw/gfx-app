// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  role      Role     @default(USER)

}

enum Role {
  USER
  ADMIN
}

enum SpectralClass {
  C
  V
  S
  H
  D
  M
}

enum FuelType {
  DIRT
  WATER
  ISOTOPE
}

enum GeneratorTech {
  ELECTRIC
  PULSED

}

enum ReactorTech {
  NEUTRONIC
  BURSTPLASMA
  EXOTIC
}

enum Abilities {
  AEROBRAKE
  SOLAR
  AIREATER
  PIVOT
  FLARE
  POWERSAT
  NOBERNAL
  NOINDUSTRIALIZE
  VALKYRIE
  SCOOP
}

model ReactorPair {
  id      Int     @id @default(autoincrement())
  frontId Int     @unique
  backId  Int     @unique
  front   Reactor @relation("ReactorFront", fields: [frontId], references: [id])
  back    Reactor @relation("ReactorBack", fields: [backId], references: [id])
}

model Reactor {

  id             Int             @id @default(autoincrement())
  name           String          @default("Generator")
  mass           Int             @default(0)
  radHard        Int             @default(0)
  spectralClass  SpectralClass   @default(C)
  techs          GeneratorTech[]
  thrustModifier Int             @default(0)
  fuelModifier   Float           @default(1)
  abilities      Abilities[]
  coolingReq     Int             @default(0)
  generatorReq   GeneratorTech
  ReactorReq     ReactorTech
  cardFront      ReactorPair?    @relation("ReactorFront")
  cardBack       ReactorPair?    @relation("ReactorBack")
}

model GeneratorPair {
  id      Int       @id @default(autoincrement())
  frontId Int       @unique
  backId  Int       @unique
  front   Generator @relation("GeneratorFront", fields: [frontId], references: [id])
  back    Generator @relation("GeneratorBack", fields: [backId], references: [id])
}

model Generator {

  id             Int             @id @default(autoincrement())
  name           String          @default("Generator")
  mass           Int             @default(0)
  radHard        Int             @default(0)
  spectralClass  SpectralClass   @default(C)
  techs          GeneratorTech[]
  thrustModifier Int             @default(0)
  fuelModifier   Float           @default(1)
  abilities      Abilities[]
  coolingReq     Int             @default(0)
  generatorReq   GeneratorTech[]
  ReactorReq     ReactorTech[]
  cardFront      GeneratorPair?  @relation("GeneratorFront")
  cardBack       GeneratorPair?  @relation("GeneratorBack")
}

model ThrusterPair {
  id      Int      @id @default(autoincrement())
  frontId Int      @unique
  backId  Int      @unique
  front   Thruster @relation("ThrusterFront", fields: [frontId], references: [id])
  back    Thruster @relation("ThrusterBack", fields: [backId], references: [id])
}

model Thruster {
  id              Int             @id @default(autoincrement())
  name            String          @default("Thruster")
  mass            Int             @default(0)
  radHard         Int             @default(0)
  spectralClass   SpectralClass   @default(C)
  fuelType        FuelType        @default(WATER)
  thrust          Int             @default(0)
  fuelConsumption Float           @default(0)
  afterBurn       Int             @default(0)
  powersatBonus   Int?            @default(0)
  abilities       Abilities[]
  coolingReq      Int             @default(0)
  generatorReq    GeneratorTech[]
  ReactorReq      ReactorTech[]
  cardFront       ThrusterPair?   @relation("ThrusterFront")
  cardBack        ThrusterPair?   @relation("ThrusterBack")
}
